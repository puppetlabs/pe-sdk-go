// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostImportParams creates a new PostImportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostImportParams() *PostImportParams {
	return &PostImportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostImportParamsWithTimeout creates a new PostImportParams object
// with the ability to set a timeout on a request.
func NewPostImportParamsWithTimeout(timeout time.Duration) *PostImportParams {
	return &PostImportParams{
		timeout: timeout,
	}
}

// NewPostImportParamsWithContext creates a new PostImportParams object
// with the ability to set a context for a request.
func NewPostImportParamsWithContext(ctx context.Context) *PostImportParams {
	return &PostImportParams{
		Context: ctx,
	}
}

// NewPostImportParamsWithHTTPClient creates a new PostImportParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostImportParamsWithHTTPClient(client *http.Client) *PostImportParams {
	return &PostImportParams{
		HTTPClient: client,
	}
}

// PostImportParams contains all the parameters to send to the API endpoint
// for the post import operation.
// Typically these are written to a http.Request.
type PostImportParams struct {

	/* Archive.

	   puppetdb archive to upload
	*/
	Archive runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post import params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostImportParams) WithDefaults() *PostImportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post import params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostImportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post import params
func (o *PostImportParams) WithTimeout(timeout time.Duration) *PostImportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post import params
func (o *PostImportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post import params
func (o *PostImportParams) WithContext(ctx context.Context) *PostImportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post import params
func (o *PostImportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post import params
func (o *PostImportParams) WithHTTPClient(client *http.Client) *PostImportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post import params
func (o *PostImportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArchive adds the archive to the post import params
func (o *PostImportParams) WithArchive(archive runtime.NamedReadCloser) *PostImportParams {
	o.SetArchive(archive)
	return o
}

// SetArchive adds the archive to the post import params
func (o *PostImportParams) SetArchive(archive runtime.NamedReadCloser) {
	o.Archive = archive
}

// WriteToRequest writes these params to a swagger request
func (o *PostImportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Archive != nil {

		if o.Archive != nil {
			// form file param archive
			if err := r.SetFileParam("archive", o.Archive); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
